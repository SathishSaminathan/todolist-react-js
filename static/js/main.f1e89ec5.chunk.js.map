{"version":3,"sources":["assets/smb_pause.wav","store/rootReducer.js","store/reducerLoader.js","pages/home/action.js","constants/global-constants.js","pages/home/reducer.js","pages/home/selectors.js","utils/utilities.js","components/shared/lottie-component.jsx","assets/lottiefiles/index.js","pages/home/components/todo-list-components/todo-cards.jsx","pages/home/components/todo-list-components/todo-list-presentaional.jsx","pages/home/components/todo-list-components/todo-list-functional.jsx","pages/home/components/todo-add/todo-add-presentational.jsx","pages/home/components/todo-add/todo-add-functional.jsx","pages/home/components/home-presentational.jsx","components/shared/speech-recognition.jsx","pages/home/components/home-functional.jsx","pages/home/sagas/todoSaga.js","pages/home/sagas/index.js","pages/home/home-page.jsx","App.js","serviceWorker.js","store/injectReducers.js","store/createStore.js","index.js"],"names":["module","exports","makeRootReducer","asyncReducers","newAsyncReducers","Object","keys","forEach","key","combineAsyncReducers","combineReducerObject","prop","value","combineReducers","injectSaga","store","saga","injectedEffects","includes","canInjectEffect","attachSaga","ReducerLoader","props","keyName","reducer","split","replaceAsyncReducers","rootReducers","shift","length","replaceReducer","injectReducer","this","children","React","Component","ADD_TODO_LIST","ADD_TODO_LIST_COMPLETED","DELETE_TODO_LIST","SET_TIME","UPDATE_TODO","addTodo","todo","type","addTodoCompleted","deleteTodo","todoId","setCurrentTime","time","updateTodo","GlobalConstants","initState","todoList","loading","moment","format","todoReducer","state","action","Actions","elementsIndex","findIndex","id","newArray","status","filter","counterState","createSelector","cnter","constructTime","now","then","ms","diff","d","duration","seconds","minutes","parseInt","asHours","days","defaultOptions","loop","autoplay","LottieComponent","width","height","file","isClickToPauseDisabled","options","animationData","LottieFile","VendorImage","RecordNotFound","AccessDenied","TodoCards","handleDelete","style","xl","enterAnimation","leaveAnimation","display","flexWrap","map","i","timingValue","dueAt","isExceeded","isUnderOneHour","isCompleted","createdAt","fromNow","className","title","content","onClick","trigger","placement","MoreOutlined","message","Option","Select","TodoListPresentational","handleChange","flexDirection","justifyContent","onChange","TodoListFunctional","useState","localTodolist","setlocalTodolist","setfilter","useEffect","filterFields","push","field","localFilteredValues","index","generateTodoList","label","temp","TextArea","Input","TodoAddPresentational","handleAdd","handleModalVisible","visible","destroyOnClose","footer","onOk","onCancel","autoFocus","placeholder","e","target","rows","minDate","Date","date","disabled","src","require","shape","icon","PlusOutlined","size","TodoAddFunctional","HomePresentational","SpeechRecognitionComponent","SpeechRecognition","startListening","continuous","language","commands","command","callback","matchInterim","useSpeechRecognition","transcript","browserSupportsSpeechRecognition","defaultValue","timestamp","Connected","connect","Selectors","dispatch","settodo","setvisible","setInterval","uuidv4","photoUrl","md5","playAudio","isDelete","document","getElementsByClassName","play","addTodoWorker","watchIncrement","put","success","actions","takeEvery","rootSaga","all","todoSaga","ReducedScreen","sagas","WrappedComponent","Consumer","storeState","App","Boolean","window","location","hostname","match","injectReducers","initReducers","init","createSagaMiddleware","middleware","enhancers","composeEnhancers","undefined","console","log","process","compose","createStore","applyMiddleware","sagaMiddleware","run","myStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f1e89ec5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smb_pause.20f930b5.wav\";","\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst replaceAsyncReducers = (rootReducers, keys, reducer) => {\r\n    const key = keys.shift();\r\n    if (keys.length === 0) {\r\n        rootReducers[key] = reducer; // eslint-disable-line\r\n        return;\r\n    }\r\n    if (!rootReducers[key]) rootReducers[key] = {}; // eslint-disable-line\r\n    const nextRootReducers = rootReducers[key];\r\n    replaceAsyncReducers(nextRootReducers, keys, reducer);\r\n};\r\n\r\nconst combineAsyncReducers = asyncReducers => {\r\n    if (typeof asyncReducers !== \"object\") return asyncReducers;\r\n    const combineReducerObject = {};\r\n    Object.keys(asyncReducers).forEach(prop => {\r\n        const value = asyncReducers[prop];\r\n        if (typeof value === \"object\") {\r\n            combineReducerObject[prop] = combineAsyncReducers(value);\r\n        } else if (typeof value === \"function\") {\r\n            combineReducerObject[prop] = value;\r\n        }\r\n    });\r\n    return combineReducers(combineReducerObject);\r\n};\r\n\r\nexport const makeRootReducer = asyncReducers => {\r\n    const newAsyncReducers = {};\r\n    if (asyncReducers) {\r\n        Object.keys(asyncReducers).forEach(key => {\r\n            newAsyncReducers[key] = combineAsyncReducers(asyncReducers[key]);\r\n        });\r\n    }\r\n\r\n    return combineReducers({\r\n        ...newAsyncReducers\r\n    });\r\n};\r\n\r\nexport const injectReducer = (store, { key, reducer }) => {\r\n    const keys = key.split(\".\");\r\n    if (!reducer) return;\r\n    replaceAsyncReducers(store.asyncReducers, keys, reducer);\r\n    store.replaceReducer(makeRootReducer(store.asyncReducers));\r\n    return reducer;\r\n};\r\n\r\nfunction canInjectEffect(store, key) {\r\n    if (!key) return false;\r\n    if (Object.keys(store.injectedEffects).includes(key)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const injectSaga = (store, { key, saga }) => {\r\n    if (!saga) return;\r\n    if (!canInjectEffect(store, key)) return;\r\n    store.injectedEffects[key] = saga; // eslint-disable-line no-param-reassign\r\n    store.attachSaga(saga);\r\n};\r\n\r\n/*\r\n  function to inject saga.\r\n*/\r\nexport const injectSideEffects = (store, { key, type, effect }) => {\r\n    switch (type) {\r\n        case \"SAGA\": {\r\n            injectSaga(store, { key, saga: effect });\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\nexport default makeRootReducer;","import React from 'react';\r\nimport { ReactReduxContext } from 'react-redux';\r\nimport { injectReducer, injectSaga } from './rootReducer';\r\n\r\nclass ReducerLoader extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { store,  keyName, reducer, saga } = props;\r\n\r\n\t\tif (keyName) {\r\n\t\t\tinjectReducer(store, { key: keyName, reducer: reducer });\r\n\t\t\tinjectSaga(store, { key: keyName, saga: saga });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport const withReducer = (key, reducer, saga) => (WrappedComponent) => {\r\n\treturn (props) => {\r\n\t\treturn (\r\n\t\t\t<ReactReduxContext.Consumer>\r\n\t\t\t\t{({ store, storeState }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ReducerLoader keyName={key} reducer={reducer} saga={saga} store={store} storeState={storeState}>\r\n\t\t\t\t\t\t\t<WrappedComponent {...props} />\r\n\t\t\t\t\t\t</ReducerLoader>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</ReactReduxContext.Consumer>\r\n\t\t);\r\n\t};\r\n};","const ADD_TODO_LIST = 'ADD_TODO_LIST';\r\nconst ADD_TODO_LIST_COMPLETED = 'ADD_TODO_LIST_COMPLETED';\r\nconst DELETE_TODO_LIST = 'DELETE_TODO_LIST';\r\nconst SET_TIME = 'SET_TIME';\r\nconst UPDATE_TODO = 'UPDATE_TODO';\r\n\r\nconst addTodo = (todo) => {\r\n\treturn {\r\n\t\ttype: ADD_TODO_LIST,\r\n\t\ttodo,\r\n\t};\r\n};\r\n\r\nconst addTodoCompleted = (todo) => {\r\n\treturn {\r\n\t\ttype: ADD_TODO_LIST_COMPLETED,\r\n\t\ttodo,\r\n\t};\r\n};\r\n\r\nconst updateTodo = (todoId) => {\r\n\treturn {\r\n\t\ttype: UPDATE_TODO,\r\n\t\ttodoId,\r\n\t};\r\n};\r\n\r\nconst setCurrentTime = (time) => {\r\n\treturn {\r\n\t\ttype: SET_TIME,\r\n\t\ttime,\r\n\t};\r\n};\r\n\r\nconst deleteTodo = (todoId) => {\r\n\treturn {\r\n\t\ttype: DELETE_TODO_LIST,\r\n\t\ttodoId,\r\n\t};\r\n};\r\n\r\nexport default {\r\n\ttypes: {\r\n\t\tADD_TODO_LIST,\r\n\t\tADD_TODO_LIST_COMPLETED,\r\n\t\tDELETE_TODO_LIST,\r\n\t\tSET_TIME,\r\n\t\tUPDATE_TODO,\r\n\t},\r\n\tcreators: {\r\n\t\taddTodo,\r\n\t\taddTodoCompleted,\r\n\t\tdeleteTodo,\r\n\t\tsetCurrentTime,\r\n\t\tupdateTodo,\r\n\t},\r\n};\r\n","export const GlobalConstants = {\r\n\tmomentFormat: 'DD/MM/YYYY hh:mm:ss',\r\n\tdateFormat: 'd/MM/yyyy hh:mm:ss',\r\n\tSUCCESS: 'SUCCESS',\r\n\tERROR: 'ERROR',\r\n\tWARNING: 'WARNING',\r\n\tCRITICAL: 'CRITICAL',\r\n\tALL: 'ALL',\r\n\tACTIVE: 'ACTIVE',\r\n\tCOMPLETED: 'COMPLETED',\r\n};\r\n","import Actions from './action';\r\nimport moment from 'moment';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nexport const initState = {\r\n\ttodoList: [],\r\n\tloading: false,\r\n\ttime: moment().format(GlobalConstants.momentFormat),\r\n};\r\n\r\nconst todoReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase Actions.types.ADD_TODO_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: !state.loading,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Actions.types.SET_TIME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttime: action.time,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Actions.types.ADD_TODO_LIST_COMPLETED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: !state.loading,\r\n\t\t\t\ttodoList: [...state.todoList, action.todo],\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Actions.types.UPDATE_TODO: {\r\n\t\t\tconst elementsIndex = state.todoList.findIndex((todo) => todo.id === action.todoId);\r\n\t\t\tlet newArray = [...state.todoList];\r\n\t\t\tnewArray[elementsIndex] = { ...newArray[elementsIndex], status: GlobalConstants.COMPLETED };\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodoList: newArray,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Actions.types.DELETE_TODO_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodoList: state.todoList.filter((todo) => todo.id !== action.todoId),\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default todoReducer;\r\n","import { createSelector } from 'reselect';\r\nimport { initState } from './reducer';\r\n\r\nconst counterState = (state) => state.todo || initState;\r\nconst todoList = createSelector(counterState, (cnter) => cnter.todoList);\r\nconst loading = createSelector(counterState, (cnter) => cnter.loading);\r\nconst time = createSelector(counterState, (cnter) => cnter.time);\r\n\r\nexport default {\r\n\tcounterState,\r\n\ttodoList,\r\n\tloading,\r\n\ttime,\r\n};\r\n","import moment from 'moment';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nexport const constructTime = (now, then, type = null) => {\r\n\tvar ms = moment(now, GlobalConstants.momentFormat).diff(moment(then, GlobalConstants.momentFormat));\r\n\tvar d = moment.duration(ms);\r\n\tswitch (type) {\r\n\t\tcase 'isExceeded':\r\n\t\t\treturn d.seconds() < 0 || d.minutes() < 0;\r\n\t\tcase 'isUnderOneHour':\r\n\t\t\treturn parseInt(d.asHours()) < 1;\r\n\t\tdefault:\r\n\t\t\treturn `${d.days()}d ${parseInt(d.asHours())}h ${d.minutes()}m ${d.seconds()}s`;\r\n\t}\r\n\r\n\t// return (type = 'isExceeded'\r\n\t// \t? d.seconds() < 0\r\n\t// \t: type === 'isUnderOneHour'\r\n\t// \t? parseInt(d.asHours()) < 0\r\n\t// \t: `${d.days()}d ${parseInt(d.asHours())}h ${d.minutes()}m ${d.seconds()}s`);\r\n};\r\n","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nconst defaultOptions = {\r\n\tloop: true,\r\n\tautoplay: true,\r\n\t// rendererSettings: {\r\n\t// \tpreserveAspectRatio: 'xMidYMid slice',\r\n\t// },\r\n};\r\n\r\nconst LottieComponent = ({ width = '100%', height = '100%', type, file }) => {\r\n\treturn <Lottie isClickToPauseDisabled={true} options={{ ...defaultOptions, animationData: file }} width={width} height={height} />;\r\n};\r\n\r\nexport default LottieComponent;\r\n","import VendorImage from './5666-zezinho.json';\r\nimport RecordNotFound from './28705-student-university-character.json';\r\nimport AccessDenied from './5270-locked.json';\r\n\r\nconst LottieFile = {\r\n\tVendorImage,\r\n\tRecordNotFound,\r\n\tAccessDenied,\r\n};\r\n\r\nexport default LottieFile;\r\n","import React from 'react';\r\nimport FlipMove from 'react-flip-move';\r\nimport { Col, Row, Tag, Popover } from 'antd';\r\nimport { MoreOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport { GlobalConstants } from '@constants/global-constants';\r\nimport { constructTime } from '@utils/utilities';\r\nimport LottieComponent from '@sharedComponent/lottie-component';\r\nimport LottieFile from '@assets/lottiefiles';\r\n\r\nconst TodoCards = ({ todoList, time, handleDelete, updateTodo }) => {\r\n\tconst renderRows = () => {\r\n\t\treturn todoList.map((todo, i) => {\r\n\t\t\tconst timingValue = constructTime(moment(todo.dueAt).format(GlobalConstants.momentFormat), time);\r\n\t\t\tconst isExceeded = constructTime(moment(todo.dueAt).format(GlobalConstants.momentFormat), time, 'isExceeded');\r\n\t\t\tconst isUnderOneHour = constructTime(moment(todo.dueAt).format(GlobalConstants.momentFormat), time, 'isUnderOneHour');\r\n\t\t\tconst isCompleted = todo.status === GlobalConstants.COMPLETED;\r\n\t\t\tconst createdAt = moment(todo.createdAt).fromNow();\r\n\t\t\treturn (\r\n\t\t\t\t<Col key={i} xl={6} className={`card_style`}>\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tclassName={`card_box ${isUnderOneHour && !isCompleted ? `underOneHour` : ``} ${\r\n\t\t\t\t\t\t\tisExceeded && !isCompleted ? `exceeded` : ``\r\n\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t<Col xl={24}>\r\n\t\t\t\t\t\t\t<Col xl={24} className=\"title_area\">\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<span className={`title ${isCompleted ? `completed` : ``}`}>{todo.title}</span>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t<span className=\"description\">\r\n\t\t\t\t\t\t\t\t\t\t({isCompleted ? `Task Completed` : isExceeded ? `Due time exceeded` : `Due in ${timingValue}`})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Popover\r\n\t\t\t\t\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{!isCompleted && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"menu_text\" onClick={() => updateTodo(todo.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMark as Completed\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"menu_text\" onClick={() => handleDelete(todo.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttrigger=\"click\"\r\n\t\t\t\t\t\t\t\t\tplacement=\"right\">\r\n\t\t\t\t\t\t\t\t\t<MoreOutlined />\r\n\t\t\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xl={24}>\r\n\t\t\t\t\t\t\t\t<div className=\"message\">{todo.message}</div>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xl={24}>\r\n\t\t\t\t\t\t\t\t<div>{`Created ${createdAt}`}</div>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Tag className={todo.type}>{todo.type}</Tag>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Row style={{ height: '100%' }}>\r\n\t\t\t<Col xl={24} style={{ height: '100%' }}>\r\n\t\t\t\t{todoList.length === 0 ? (\r\n\t\t\t\t\t<LottieComponent file={LottieFile.RecordNotFound} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<FlipMove enterAnimation=\"elevator\" leaveAnimation=\"none\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n\t\t\t\t\t\t{renderRows()}\r\n\t\t\t\t\t</FlipMove>\r\n\t\t\t\t)}\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default TodoCards;\r\n","import React from 'react';\r\nimport { Row, Col, Select } from 'antd';\r\n\r\nimport TodoCards from './todo-cards';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst { Option } = Select;\r\n\r\nconst TodoListPresentational = ({ time, todoList, handleChange, handleDelete, updateTodo, filter: { type, status } }) => {\r\n\treturn (\r\n\t\t<Col xl={24} className=\"list_area\">\r\n\t\t\t{todoList.length !== 0 && (\r\n\t\t\t\t<Row style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\t\tTask Status\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"input_style\">\r\n\t\t\t\t\t\t\t<Select onChange={(value) => handleChange('status', value)} value={status} style={{ width: 120 }}>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.ALL}>All</Option>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.ACTIVE}>Active</Option>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.COMPLETED}>Completed</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\t\tType\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"input_style\">\r\n\t\t\t\t\t\t\t<Select onChange={(value) => handleChange('type', value)} value={type} style={{ width: 120 }}>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.ALL}>All</Option>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.SUCCESS}>Success</Option>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.ERROR}>Error</Option>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.WARNING}>Warning</Option>\r\n\t\t\t\t\t\t\t\t<Option value={GlobalConstants.CRITICAL}>Critical</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t\t<TodoCards todoList={todoList} time={time} handleDelete={handleDelete} updateTodo={updateTodo} />\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nexport default TodoListPresentational;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport TodoListPresentational from './todo-list-presentaional';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst TodoListFunctional = ({ todoList, time, handleDelete, updateTodo }) => {\r\n\tconst [localTodolist, setlocalTodolist] = useState([]);\r\n\tconst [filter, setfilter] = useState({\r\n\t\ttype: GlobalConstants.ALL,\r\n\t\tstatus: GlobalConstants.ALL,\r\n\t});\r\n\r\n\tconst generateTodoList = (todoList) => {\r\n\t\tconst { type, status } = filter;\r\n\t\tlet filterFields = [];\r\n\r\n\t\tif (type !== GlobalConstants.ALL) filterFields.push({ field: 'type', value: type });\r\n\t\tif (status !== GlobalConstants.ALL) filterFields.push({ field: 'status', value: status });\r\n\r\n\t\tsetlocalTodolist(todoList);\r\n\r\n\t\tlet localFilteredValues = todoList;\r\n\t\tfor (let index = 0; index < filterFields.length; index++) {\r\n\t\t\tlocalFilteredValues = localFilteredValues.filter((todo) => todo[filterFields[index].field] === filterFields[index].value);\r\n\t\t}\r\n\r\n\t\tsetlocalTodolist(localFilteredValues);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgenerateTodoList(todoList);\r\n\t}, [todoList, filter]);\r\n\r\n\tconst handleChange = (label, value) => {\r\n\t\tlet temp = {\r\n\t\t\t...filter,\r\n\t\t\t[label]: value,\r\n\t\t};\r\n\t\tsetfilter(temp);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TodoListPresentational\r\n\t\t\tupdateTodo={updateTodo}\r\n\t\t\ttime={time}\r\n\t\t\tfilter={filter}\r\n\t\t\thandleChange={handleChange}\r\n\t\t\thandleDelete={handleDelete}\r\n\t\t\ttodoList={localTodolist}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default TodoListFunctional;\r\n","import React from 'react';\r\nimport { Row, Col, Input, Select, Button, Modal } from 'antd';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst TodoAddPresentational = ({ loading, handleAdd, handleModalVisible, visible, handleChange, todo: { title, message, dueAt, type } }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Col xl={24} className=\"add_area\">\r\n\t\t\t\t<span className=\"title_text\">Click Plus Button or Tell \"Create\" to Create TODO</span>\r\n\t\t\t\t<Modal destroyOnClose footer={null} title=\"Add Todo\" visible={visible} onOk={handleAdd} onCancel={() => handleModalVisible(false)}>\r\n\t\t\t\t\t<Col xl={24} className=\"input_area\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\t\t\t\tTitle\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"input_style\">\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tautoFocus={visible}\r\n\t\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"enter todo\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange('title', e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\t\t\t\tMessage\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"input_style\" style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange('message', e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"enter todo message\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\t\t\t\tType\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"input_style\" style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t<Select onChange={(value) => handleChange('type', value)} value={type} style={{ width: 120 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={GlobalConstants.SUCCESS}>Success</Option>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={GlobalConstants.ERROR}>Error</Option>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={GlobalConstants.WARNING}>Warning</Option>\r\n\t\t\t\t\t\t\t\t\t\t<Option value={GlobalConstants.CRITICAL}>Critical</Option>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\t\t\t\tDue at\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"input_style\" style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t<DateTimePicker\r\n\t\t\t\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"date_picker_style\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => handleChange('dueAt', date)}\r\n\t\t\t\t\t\t\t\t\t\tvalue={dueAt}\r\n\t\t\t\t\t\t\t\t\t\tformat={GlobalConstants.dateFormat}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t\t\t\t<Col className=\"\" xl={24}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!(title && message && dueAt)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleAdd}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\tCreate (or Tell \"Save\")\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<audio className=\"audio-element\">\r\n\t\t\t\t\t\t\t{/* <source src={require('@assets/smb_pause.wav')}></source> */}\r\n\t\t\t\t\t\t\t<source src=\"https://api.coderrocketfuel.com/assets/pomodoro-times-up.mp3\"></source>\r\n\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t<audio className=\"audio-element1\">\r\n\t\t\t\t\t\t\t<source src={require('@assets/smb_pause.wav')}></source>\r\n\t\t\t\t\t\t\t{/* <source src=\"https://api.coderrocketfuel.com/assets/pomodoro-times-up.mp3\"></source> */}\r\n\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Col>\r\n\t\t\t<Button className=\"add_button\" onClick={handleModalVisible} type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size={'large'} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TodoAddPresentational;\r\n","import React from 'react';\r\nimport TodoAddPresentational from './todo-add-presentational';\r\n\r\nconst TodoAddFunctional = ({ loading, handleAdd, handleChange, todo, visible, handleModalVisible }) => {\r\n\treturn (\r\n\t\t<TodoAddPresentational\r\n\t\t\tloading={loading}\r\n\t\t\thandleModalVisible={handleModalVisible}\r\n\t\t\tvisible={visible}\r\n\t\t\thandleAdd={handleAdd}\r\n\t\t\thandleChange={handleChange}\r\n\t\t\ttodo={todo}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default TodoAddFunctional;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport TodoListFunctional from './todo-list-components/todo-list-functional';\r\nimport TodoAddFunctional from './todo-add/todo-add-functional';\r\n\r\nconst HomePresentational = ({ todoList, handleAdd, handleDelete, handleChange, todo, loading, time, updateTodo, visible, handleModalVisible }) => {\r\n\treturn (\r\n\t\t<Row className=\"todo_container\">\r\n\t\t\t<Col className=\"todo_box\" xl={24}>\r\n\t\t\t\t<Row style={{ height: '100%' }}>\r\n\t\t\t\t\t<TodoAddFunctional\r\n\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\thandleModalVisible={handleModalVisible}\r\n\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\thandleAdd={handleAdd}\r\n\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TodoListFunctional time={time} todoList={todoList} handleDelete={handleDelete} updateTodo={updateTodo} />\r\n\t\t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default HomePresentational;\r\n","import React, { useEffect } from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nconst SpeechRecognitionComponent = ({ handleModalVisible, handleAdd }) => {\r\n\t// const [message, setMessage] = useState('');\r\n\tconst listenContinuously = () =>\r\n\t\tSpeechRecognition.startListening({\r\n\t\t\tcontinuous: true,\r\n\t\t\tlanguage: 'en-GB',\r\n\t\t});\r\n\r\n\t// const stop = () => {\r\n\t// \tSpeechRecognition.stopListening();\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tlistenContinuously();\r\n\t}, []);\r\n\r\n\tconst commands = [\r\n\t\t{\r\n\t\t\tcommand: 'create',\r\n\t\t\tcallback: () => handleModalVisible(true),\r\n\t\t\tmatchInterim: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcommand: 'save',\r\n\t\t\tcallback: () => handleAdd(),\r\n\t\t\tmatchInterim: true,\r\n\t\t},\r\n\t];\r\n\r\n\tconst { transcript } = useSpeechRecognition({ commands });\r\n\r\n\tif (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <>{/* <div>\r\n\t\t\t\t<p>{message}</p>\r\n\t\t\t\t<p>{transcript}</p>\r\n\t\t\t</div> */}</>;\r\n};\r\nexport default SpeechRecognitionComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment';\r\nimport md5 from 'md5';\r\n\r\nimport Selectors from '../selectors';\r\nimport Actions from '../action';\r\nimport HomePresentational from './home-presentational';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\nimport SpeechRecognition from '@sharedComponent/speech-recognition';\r\n\r\n// const dueInitialTime = () => {\r\n// \tvar d = new Date();\r\n// \treturn d.setMinutes(d.getMinutes() + 1);\r\n// };\r\n\r\nconst defaultValue = {\r\n\ttitle: '',\r\n\tmessage: '',\r\n\ttype: GlobalConstants.SUCCESS,\r\n\tstatus: GlobalConstants.ACTIVE,\r\n\tdueAt: new Date(),\r\n\ttimestamp: moment().format('X'),\r\n};\r\n\r\nconst HomeFunctional = ({ todoList, addTodo, deleteTodo, loading, time, setCurrentTime, updateTodo }) => {\r\n\tconst [todo, settodo] = useState(defaultValue);\r\n\tconst [visible, setvisible] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => {\r\n\t\t\tif (todoList.length > 0) setCurrentTime(moment().format(GlobalConstants.momentFormat));\r\n\t\t}, 1000);\r\n\t}, [todoList]);\r\n\r\n\tconst handleChange = (label, value) => {\r\n\t\tlet temp = {\r\n\t\t\t...todo,\r\n\t\t\t[label]: value,\r\n\t\t};\r\n\t\tsettodo(temp);\r\n\t};\r\n\r\n\tconst handleDelete = (todoId) => {\r\n\t\tdeleteTodo(todoId);\r\n\t};\r\n\r\n\t// const openNotification = () => {\r\n\t// \tnotification.open({\r\n\t// \t\tmessage: 'Required!!',\r\n\t// \t\tdescription: 'Please provide valid details to save',\r\n\t// \t\ticon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n\t// \t});\r\n\t// };\r\n\r\n\tconst handleAdd = () => {\r\n\t\tconst { title, message, dueAt } = todo;\r\n\t\tif (title && message && dueAt) {\r\n\t\t\taddTodo({\r\n\t\t\t\t...todo,\r\n\t\t\t\tcreatedAt: moment(),\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t\tphotoUrl: `http://gravatar.com/avatar/${md5(`${uuidv4()}@gmail.com`)}?d=identicon`,\r\n\t\t\t});\r\n\t\t\tsettodo(defaultValue);\r\n\t\t\tplayAudio(false);\r\n\t\t\thandleModalVisible(false);\r\n\t\t}\r\n\t\t// else {\r\n\t\t// \topenNotification();\r\n\t\t// }\r\n\t};\r\n\r\n\tconst playAudio = (isDelete) => {\r\n\t\tconst className = isDelete ? 'audio-element' : 'audio-element1';\r\n\t\tconst audioEl = document.getElementsByClassName('audio-element')[0];\r\n\t\taudioEl.play();\r\n\t};\r\n\r\n\tconst handleModalVisible = (value) => {\r\n\t\tsetvisible(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SpeechRecognition handleModalVisible={handleModalVisible} handleAdd={handleAdd} />\r\n\t\t\t<HomePresentational\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\thandleModalVisible={handleModalVisible}\r\n\t\t\t\ttime={time}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\ttodoList={todoList}\r\n\t\t\t\thandleAdd={handleAdd}\r\n\t\t\t\thandleChange={handleChange}\r\n\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\tupdateTodo={updateTodo}\r\n\t\t\t\ttodo={todo}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttodoList: Selectors.todoList(state),\r\n\t\tloading: Selectors.loading(state),\r\n\t\ttime: Selectors.time(state),\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddTodo: (todo) => dispatch(Actions.creators.addTodo(todo)),\r\n\t\tdeleteTodo: (todoId) => dispatch(Actions.creators.deleteTodo(todoId)),\r\n\t\tupdateTodo: (todoId) => dispatch(Actions.creators.updateTodo(todoId)),\r\n\t\tsetCurrentTime: (time) => dispatch(Actions.creators.setCurrentTime(time)),\r\n\t};\r\n};\r\n\r\nconst Connected = connect(mapStateToProps, mapDispatchToProps)(HomeFunctional);\r\n\r\nexport default Connected;\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport Actions from '../action';\r\nimport { message } from 'antd';\r\n\r\nexport function* addTodoWorker(action) {\r\n\tyield put(Actions.creators.addTodoCompleted(action.todo));\r\n\tmessage.success('Task Created Successfully!!');\r\n}\r\n\r\nexport default function* watchIncrement(actions) {\r\n\tyield takeEvery(Actions.types.ADD_TODO_LIST, addTodoWorker);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport todoSaga from './todoSaga';\r\n\r\nexport default function* rootSaga(action) {\r\n\tyield all([todoSaga(action)]);\r\n}\r\n","import React from 'react';\r\n\r\nimport { withReducer } from '@store/reducerLoader';\r\nimport HomeFunctional from './components/home-functional';\r\nimport reducer from './reducer';\r\nimport sagas from './sagas';\r\nimport './home.scss';\r\n\r\nconst Home = () => {\r\n\treturn <HomeFunctional />;\r\n};\r\n\r\nconst ReducedScreen = withReducer('todo', reducer, sagas)(Home);\r\nexport default ReducedScreen;\r\n","import React from 'react';\r\n\r\nimport Home from '@pages/home/home-page';\r\n\r\nfunction App() {\r\n\treturn <Home />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\n// import counterReducer from '../screens/counter/counterReducer';\r\n// import counterSage from '../screens/counter/sagas';\r\n// import { injectReducer, injectSaga } from './rootReducer';\r\nconst injectReducers = (store) => {\r\n\t// injectReducer(store, { key: 'counter', reducer: counterReducer });\r\n\t// injectSaga(store, { key: 'counter', saga: counterSage });\r\n};\r\n\r\nexport default injectReducers;","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport makeRootReducer from './rootReducer';\r\nimport injectReducers from './injectReducers';\r\n\r\nconst initReducer = (state = {}, action) => {\r\n\treturn state;\r\n};\r\n\r\nconst initReducers = {\r\n\tinit: initReducer,\r\n};\r\n\r\nconst myStore = (initState = {}) => {\r\n\tconst saga = createSagaMiddleware();\r\n\tlet middleware = [saga];\r\n\tconst enhancers = [];\r\n\tlet composeEnhancers = undefined;\r\n\r\n    console.log(`process.env.NODE_ENV: ${process.env.NODE_ENV}`);\r\n\tif (process.env.NODE_ENV !== \"production\") {\r\n\t\t//remote debugging can be switched on/off by shaking the expo client.\r\n\t\t// if (Platform.OS === 'ios') NativeModules.DevSettings.setIsDebuggingRemotely(true);\r\n\t\tcomposeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;;\r\n\t\t// middleware.push(logger);\r\n\t} else {\r\n\t\tcomposeEnhancers = compose;\r\n\t}\r\n\r\n\t// composeEnhancers = compose;\r\n\tconst store = createStore(\r\n\t\tmakeRootReducer(initReducers),\r\n\t\tinitState,\r\n\t\tcomposeEnhancers(applyMiddleware(...middleware), ...enhancers)\r\n\t);\r\n\r\n\tstore.asyncReducers = {};\r\n\tstore.sagaMiddleware = saga;\r\n\tstore.injectedEffects = {};\r\n\r\n\tstore.attachSaga = saga => {\r\n\t\tstore.sagaMiddleware.run(saga);\r\n\t};\r\n\tinjectReducers(store);\r\n\treturn store;\r\n};\r\n\r\nexport default myStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport myStore from './store/createStore';\r\nconst store = myStore();\r\n\r\n//test\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}