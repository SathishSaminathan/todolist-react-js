{"version":3,"sources":["store/rootReducer.js","store/reducerLoader.js","pages/home/action.js","constants/global-constants.js","pages/home/reducer.js","pages/home/selectors.js","pages/home/components/todo-add.jsx","pages/home/components/todo-list-components/todo-cards.jsx","pages/home/components/todo-list-components/todo-list-presentaional.jsx","pages/home/components/todo-list-components/todo-list-functional.jsx","pages/home/components/home-presentational.jsx","pages/home/components/home-functional.jsx","pages/home/sagas/todoSaga.js","pages/home/sagas/index.js","pages/home/home-page.jsx","App.js","serviceWorker.js","store/injectReducers.js","store/createStore.js","index.js"],"names":["makeRootReducer","asyncReducers","newAsyncReducers","Object","keys","forEach","key","combineAsyncReducers","combineReducerObject","prop","value","combineReducers","injectSaga","store","saga","injectedEffects","includes","canInjectEffect","attachSaga","ReducerLoader","props","keyName","reducer","split","replaceAsyncReducers","rootReducers","shift","length","replaceReducer","injectReducer","this","children","React","Component","ADD_TODO_LIST","ADD_TODO_LIST_COMPLETED","DELETE_TODO_LIST","SET_TIME","addTodo","todo","type","addTodoCompleted","deleteTodo","todoId","setCurrentTime","time","GlobalConstants","initState","todoList","loading","moment","format","todoReducer","state","action","Actions","filter","id","counterState","createSelector","cnter","TextArea","Input","Option","Select","TodoAdd","handleAdd","handleChange","title","message","dueAt","xl","className","placeholder","onChange","e","target","style","width","rows","minDate","Date","date","disabled","onClick","src","TodoCards","handleDelete","enterAnimation","leaveAnimation","map","i","now","then","ms","diff","d","duration","days","parseInt","asHours","minutes","seconds","constructTime","icon","DeleteOutlined","size","TodoListPresentational","status","display","flexDirection","justifyContent","TodoListFunctional","useState","localTodolist","setlocalTodolist","setfilter","useEffect","tempArr","generateTodoList","label","temp","HomePresentational","defaultValue","timestamp","Connected","connect","Selectors","dispatch","settodo","setInterval","playAudio","document","getElementsByClassName","play","uuidv4","console","log","addTodoWorker","watchIncrement","put","actions","takeEvery","rootSaga","all","todoSaga","ReducedScreen","sagas","WrappedComponent","Consumer","storeState","App","Boolean","window","location","hostname","match","injectReducers","initReducers","init","createSagaMiddleware","middleware","enhancers","composeEnhancers","undefined","process","compose","createStore","applyMiddleware","sagaMiddleware","run","myStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c9cec4db.chunk.js","sourcesContent":["\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst replaceAsyncReducers = (rootReducers, keys, reducer) => {\r\n    const key = keys.shift();\r\n    if (keys.length === 0) {\r\n        rootReducers[key] = reducer; // eslint-disable-line\r\n        return;\r\n    }\r\n    if (!rootReducers[key]) rootReducers[key] = {}; // eslint-disable-line\r\n    const nextRootReducers = rootReducers[key];\r\n    replaceAsyncReducers(nextRootReducers, keys, reducer);\r\n};\r\n\r\nconst combineAsyncReducers = asyncReducers => {\r\n    if (typeof asyncReducers !== \"object\") return asyncReducers;\r\n    const combineReducerObject = {};\r\n    Object.keys(asyncReducers).forEach(prop => {\r\n        const value = asyncReducers[prop];\r\n        if (typeof value === \"object\") {\r\n            combineReducerObject[prop] = combineAsyncReducers(value);\r\n        } else if (typeof value === \"function\") {\r\n            combineReducerObject[prop] = value;\r\n        }\r\n    });\r\n    return combineReducers(combineReducerObject);\r\n};\r\n\r\nexport const makeRootReducer = asyncReducers => {\r\n    const newAsyncReducers = {};\r\n    if (asyncReducers) {\r\n        Object.keys(asyncReducers).forEach(key => {\r\n            newAsyncReducers[key] = combineAsyncReducers(asyncReducers[key]);\r\n        });\r\n    }\r\n\r\n    return combineReducers({\r\n        ...newAsyncReducers\r\n    });\r\n};\r\n\r\nexport const injectReducer = (store, { key, reducer }) => {\r\n    const keys = key.split(\".\");\r\n    if (!reducer) return;\r\n    replaceAsyncReducers(store.asyncReducers, keys, reducer);\r\n    store.replaceReducer(makeRootReducer(store.asyncReducers));\r\n    return reducer;\r\n};\r\n\r\nfunction canInjectEffect(store, key) {\r\n    if (!key) return false;\r\n    if (Object.keys(store.injectedEffects).includes(key)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const injectSaga = (store, { key, saga }) => {\r\n    if (!saga) return;\r\n    if (!canInjectEffect(store, key)) return;\r\n    store.injectedEffects[key] = saga; // eslint-disable-line no-param-reassign\r\n    store.attachSaga(saga);\r\n};\r\n\r\n/*\r\n  function to inject saga.\r\n*/\r\nexport const injectSideEffects = (store, { key, type, effect }) => {\r\n    switch (type) {\r\n        case \"SAGA\": {\r\n            injectSaga(store, { key, saga: effect });\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\nexport default makeRootReducer;","import React from 'react';\r\nimport { ReactReduxContext } from 'react-redux';\r\nimport { injectReducer, injectSaga } from './rootReducer';\r\n\r\nclass ReducerLoader extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { store,  keyName, reducer, saga } = props;\r\n\r\n\t\tif (keyName) {\r\n\t\t\tinjectReducer(store, { key: keyName, reducer: reducer });\r\n\t\t\tinjectSaga(store, { key: keyName, saga: saga });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport const withReducer = (key, reducer, saga) => (WrappedComponent) => {\r\n\treturn (props) => {\r\n\t\treturn (\r\n\t\t\t<ReactReduxContext.Consumer>\r\n\t\t\t\t{({ store, storeState }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ReducerLoader keyName={key} reducer={reducer} saga={saga} store={store} storeState={storeState}>\r\n\t\t\t\t\t\t\t<WrappedComponent {...props} />\r\n\t\t\t\t\t\t</ReducerLoader>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</ReactReduxContext.Consumer>\r\n\t\t);\r\n\t};\r\n};","const ADD_TODO_LIST = 'ADD_TODO_LIST';\r\nconst ADD_TODO_LIST_COMPLETED = 'ADD_TODO_LIST_COMPLETED';\r\nconst DELETE_TODO_LIST = 'DELETE_TODO_LIST';\r\nconst SET_TIME = 'SET_TIME';\r\n\r\nconst addTodo = (todo) => {\r\n\treturn {\r\n\t\ttype: ADD_TODO_LIST,\r\n\t\ttodo,\r\n\t};\r\n};\r\n\r\nconst addTodoCompleted = (todo) => {\r\n\treturn {\r\n\t\ttype: ADD_TODO_LIST_COMPLETED,\r\n\t\ttodo,\r\n\t};\r\n};\r\nconst setCurrentTime = (time) => {\r\n\treturn {\r\n\t\ttype: SET_TIME,\r\n\t\ttime,\r\n\t};\r\n};\r\n\r\nconst deleteTodo = (todoId) => {\r\n\treturn {\r\n\t\ttype: DELETE_TODO_LIST,\r\n\t\ttodoId,\r\n\t};\r\n};\r\n\r\nexport default {\r\n\ttypes: {\r\n\t\tADD_TODO_LIST,\r\n\t\tADD_TODO_LIST_COMPLETED,\r\n\t\tDELETE_TODO_LIST,\r\n\t\tSET_TIME,\r\n\t},\r\n\tcreators: {\r\n\t\taddTodo,\r\n\t\taddTodoCompleted,\r\n\t\tdeleteTodo,\r\n\t\tsetCurrentTime,\r\n\t},\r\n};\r\n","export const GlobalConstants = {\r\n\tmomentFormat: 'DD/MM/YYYY hh:mm:ss',\r\n\tdateFormat: 'd/MM/yyyy hh:mm:ss',\r\n\tSUCCESS: 'SUCCESS',\r\n\tERROR: 'ERROR',\r\n\tWARNING: 'WARNING',\r\n\tCRITICAL: 'CRITICAL',\r\n\tALL: 'ALL',\r\n\tACTIVE: 'ACTIVE',\r\n\tCOMPLETED: 'COMPLETED',\r\n};\r\n","import Actions from './action';\r\nimport moment from 'moment';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nexport const initState = {\r\n\ttodoList: [],\r\n\tloading: false,\r\n\ttime: moment().format(GlobalConstants.momentFormat),\r\n};\r\n\r\nconst todoReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase Actions.types.ADD_TODO_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: !state.loading,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Actions.types.SET_TIME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttime: action.time,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Actions.types.ADD_TODO_LIST_COMPLETED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: !state.loading,\r\n\t\t\t\ttodoList: [...state.todoList, action.todo],\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Actions.types.DELETE_TODO_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodoList: state.todoList.filter((todo) => todo.id !== action.todoId),\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default todoReducer;\r\n","import { createSelector } from 'reselect';\r\nimport { initState } from './reducer';\r\n\r\nconst counterState = (state) => state.todo || initState;\r\nconst todoList = createSelector(counterState, (cnter) => cnter.todoList);\r\nconst loading = createSelector(counterState, (cnter) => cnter.loading);\r\nconst time = createSelector(counterState, (cnter) => cnter.time);\r\n\r\nexport default {\r\n\tcounterState,\r\n\ttodoList,\r\n\tloading,\r\n\ttime,\r\n};\r\n","import React from 'react';\r\nimport { Row, Col, Input, Select, Button } from 'antd';\r\nimport moment from 'moment';\r\nimport DateTimePicker from 'react-datetime-picker';\r\n\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst TodoAdd = ({ loading, handleAdd, handleChange, todo: { title, message, dueAt, type } }) => {\r\n\treturn (\r\n\t\t<Col xl={12} className=\"input_area\">\r\n\t\t\t<Col>\r\n\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\tTitle\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"input_style\">\r\n\t\t\t\t\t\t<Input value={title} placeholder=\"enter todo\" onChange={(e) => handleChange('title', e.target.value)} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\tMessage\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"input_style\" style={{ width: '100%' }}>\r\n\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\tonChange={(e) => handleChange('message', e.target.value)}\r\n\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\tplaceholder=\"enter todo message\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\tType\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"input_style\" style={{ width: '100%' }}>\r\n\t\t\t\t\t\t<Select onChange={(value) => handleChange('type', value)} value={type} style={{ width: 120 }}>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.SUCCESS}>Success</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.ERROR}>Error</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.WARNING}>Warning</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.CRITICAL}>Critical</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\tDue at\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"input_style\" style={{ width: '100%' }}>\r\n\t\t\t\t\t\t<DateTimePicker\r\n\t\t\t\t\t\t\tminDate={new Date()}\r\n\t\t\t\t\t\t\tclassName=\"date_picker_style\"\r\n\t\t\t\t\t\t\tonChange={(date) => handleChange('dueAt', date)}\r\n\t\t\t\t\t\t\tvalue={dueAt}\r\n\t\t\t\t\t\t\tformat={GlobalConstants.dateFormat}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t<Col className=\"\" xl={24}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\tdisabled={!(title && message && dueAt)}\r\n\t\t\t\t\t\t\tonClick={handleAdd}\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t\t<audio className=\"audio-element\">\r\n\t\t\t\t{/* <source src={require('@assets/smb_pause.wav')}></source> */}\r\n\t\t\t\t<source src=\"https://api.coderrocketfuel.com/assets/pomodoro-times-up.mp3\"></source>\r\n\t\t\t</audio>\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nexport default TodoAdd;\r\n","import React, { useState, useEffect } from 'react';\r\nimport FlipMove from 'react-flip-move';\r\nimport { Col, Button, Row, Checkbox } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst TodoCards = ({ todoList, time, handleDelete }) => {\r\n\tconst constructTime = (now, then) => {\r\n\t\tvar ms = moment(now, GlobalConstants.momentFormat).diff(moment(then, GlobalConstants.momentFormat));\r\n\t\tvar d = moment.duration(ms);\r\n\t\treturn `${d.days()}d ${parseInt(d.asHours())}h ${d.minutes()}m ${d.seconds()}s`;\r\n\t};\r\n\r\n\tconst renderRows = () => {\r\n\t\treturn todoList.map((todo, i) => (\r\n\t\t\t<Col key={i} xl={24} className=\"card_style\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xl={18}>\r\n\t\t\t\t\t\t<Col xl={24} className=\"title_area\">\r\n\t\t\t\t\t\t\t<span className=\"title\">{todo.title}</span>\r\n\t\t\t\t\t\t\t<span className=\"description\">Due in {constructTime(moment(todo.dueAt).format(GlobalConstants.momentFormat), time)}</span>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl={24}>\r\n\t\t\t\t\t\t\t<div className=\"message\">{todo.message}</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xl={6} className=\"card_right\">\r\n\t\t\t\t\t\t<Checkbox></Checkbox>\r\n\t\t\t\t\t\t<Button onClick={() => handleDelete(todo.id)} type=\"primary\" icon={<DeleteOutlined />} size={'middle'} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t));\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<FlipMove enterAnimation=\"accordionVertical\" leaveAnimation=\"none\">\r\n\t\t\t\t{renderRows()}\r\n\t\t\t</FlipMove>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TodoCards;\r\n","import React from 'react';\r\nimport { Row, Col, Select } from 'antd';\r\n\r\nimport TodoCards from './todo-cards';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst { Option } = Select;\r\n\r\nconst TodoListPresentational = ({ time, todoList, handleChange, handleDelete, filter: { type, status } }) => {\r\n\treturn (\r\n\t\t<Col xl={12} className=\"list_area\">\r\n\t\t\t<Row style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\tTask Status\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"input_style\">\r\n\t\t\t\t\t\t<Select onChange={(value) => handleChange('status', value)} value={status} style={{ width: 120 }}>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.ALL}>All</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.ACTIVE}>Active</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.COMPLETED}>Completed</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"input_container\">\r\n\t\t\t\t\t<Col className=\"label\" xl={24}>\r\n\t\t\t\t\t\tType\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"input_style\">\r\n\t\t\t\t\t\t<Select onChange={(value) => handleChange('type', value)} value={type} style={{ width: 120 }}>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.ALL}>All</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.SUCCESS}>Success</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.ERROR}>Error</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.WARNING}>Warning</Option>\r\n\t\t\t\t\t\t\t<Option value={GlobalConstants.CRITICAL}>Critical</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Row>\r\n\t\t\t<TodoCards todoList={todoList} time={time} handleDelete={handleDelete} />\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nexport default TodoListPresentational;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport TodoListPresentational from './todo-list-presentaional';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst TodoListFunctional = ({ todoList, time, handleDelete }) => {\r\n\tconst [localTodolist, setlocalTodolist] = useState([]);\r\n\tconst [filter, setfilter] = useState({\r\n\t\ttype: GlobalConstants.ALL,\r\n\t\tstatus: GlobalConstants.ALL,\r\n\t});\r\n\r\n\tconst generateTodoList = (todoList) => {\r\n\t\tconst { type, status } = filter;\r\n\t\tlet tempArr = [];\r\n\t\tif (type === GlobalConstants.ALL) {\r\n\t\t\tsetlocalTodolist(todoList);\r\n\t\t} else {\r\n\t\t\ttempArr = todoList.filter((todo) => todo.type === type);\r\n\t\t\tsetlocalTodolist(tempArr);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgenerateTodoList(todoList);\r\n\t}, [todoList, filter]);\r\n\r\n\tconst handleChange = (label, value) => {\r\n\t\tlet temp = {\r\n\t\t\t...filter,\r\n\t\t\t[label]: value,\r\n\t\t};\r\n\t\tsetfilter(temp);\r\n\t};\r\n\r\n\treturn <TodoListPresentational time={time} filter={filter} handleChange={handleChange} handleDelete={handleDelete} todoList={localTodolist} />;\r\n};\r\n\r\nexport default TodoListFunctional;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport TodoAdd from './todo-add';\r\nimport TodoList from './todo-list-components/todo-list-functional';\r\n\r\nconst HomePresentational = ({ todoList, handleAdd, handleDelete, handleChange, todo, loading, time }) => {\r\n\treturn (\r\n\t\t<Row className=\"todo_container\">\r\n\t\t\t<Col className=\"todo_box\" xl={16}>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xl={24} className=\"header\">\r\n\t\t\t\t\t\tTodo App\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<TodoAdd loading={loading} handleAdd={handleAdd} handleChange={handleChange} todo={todo} />\r\n\t\t\t\t\t<TodoList time={time} todoList={todoList} handleDelete={handleDelete} />\r\n\t\t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default HomePresentational;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment';\r\n\r\nimport Selectors from '../selectors';\r\nimport Actions from '../action';\r\nimport HomePresentational from './home-presentational';\r\nimport { GlobalConstants } from '@constants/global-constants';\r\n\r\nconst defaultValue = {\r\n\ttitle: '',\r\n\tmessage: '',\r\n\ttype: GlobalConstants.SUCCESS,\r\n\tstatus: GlobalConstants.ACTIVE,\r\n\tdueAt: new Date(),\r\n\ttimestamp: moment().format('X'),\r\n};\r\n\r\nconst HomeFunctional = ({ todoList, addTodo, deleteTodo, loading, time, setCurrentTime }) => {\r\n\tconst [todo, settodo] = useState(defaultValue);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => {\r\n\t\t\tif (todoList.length > 0) setCurrentTime(moment().format(GlobalConstants.momentFormat));\r\n\t\t}, 1000);\r\n\t}, [todoList]);\r\n\r\n\tconst handleChange = (label, value) => {\r\n\t\tlet temp = {\r\n\t\t\t...todo,\r\n\t\t\t[label]: value,\r\n\t\t};\r\n\t\tsettodo(temp);\r\n\t};\r\n\r\n\tconst handleDelete = (todoId) => {\r\n\t\tconsole.log('todoList', todoList);\r\n\t\tdeleteTodo(todoId);\r\n\t};\r\n\r\n\tconst handleAdd = () => {\r\n\t\taddTodo({ ...todo, id: uuidv4() });\r\n\t\tsettodo(defaultValue);\r\n\t\tplayAudio();\r\n\t};\r\n\r\n\tconst playAudio = () => {\r\n\t\tconst audioEl = document.getElementsByClassName('audio-element')[0];\r\n\t\taudioEl.play();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HomePresentational\r\n\t\t\t\ttime={time}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\ttodoList={todoList}\r\n\t\t\t\thandleAdd={handleAdd}\r\n\t\t\t\thandleChange={handleChange}\r\n\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\ttodo={todo}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttodoList: Selectors.todoList(state),\r\n\t\tloading: Selectors.loading(state),\r\n\t\ttime: Selectors.time(state),\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddTodo: (todo) => dispatch(Actions.creators.addTodo(todo)),\r\n\t\tdeleteTodo: (todoId) => dispatch(Actions.creators.deleteTodo(todoId)),\r\n\t\tsetCurrentTime: (time) => dispatch(Actions.creators.setCurrentTime(time)),\r\n\t};\r\n};\r\n\r\nconst Connected = connect(mapStateToProps, mapDispatchToProps)(HomeFunctional);\r\n\r\nexport default Connected;\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport Actions from '../action';\r\n\r\nexport function* addTodoWorker(action) {\r\n\tyield put(Actions.creators.addTodoCompleted(action.todo));\r\n}\r\n\r\nexport default function* watchIncrement(actions) {\r\n\tyield takeEvery(Actions.types.ADD_TODO_LIST, addTodoWorker);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport todoSaga from './todoSaga';\r\n\r\nexport default function* rootSaga(action) {\r\n\tyield all([todoSaga(action)]);\r\n}\r\n","import React from 'react';\r\n\r\nimport { withReducer } from '@store/reducerLoader';\r\nimport HomeFunctional from './components/home-functional';\r\nimport reducer from './reducer';\r\nimport sagas from './sagas';\r\nimport './home.scss';\r\n\r\nconst Home = () => {\r\n\treturn <HomeFunctional />;\r\n};\r\n\r\nconst ReducedScreen = withReducer('todo', reducer, sagas)(Home);\r\nexport default ReducedScreen;\r\n","import React from 'react';\r\n\r\nimport Home from '@pages/home/home-page';\r\n\r\nfunction App() {\r\n\treturn <Home />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\n// import counterReducer from '../screens/counter/counterReducer';\r\n// import counterSage from '../screens/counter/sagas';\r\n// import { injectReducer, injectSaga } from './rootReducer';\r\nconst injectReducers = (store) => {\r\n\t// injectReducer(store, { key: 'counter', reducer: counterReducer });\r\n\t// injectSaga(store, { key: 'counter', saga: counterSage });\r\n};\r\n\r\nexport default injectReducers;","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport makeRootReducer from './rootReducer';\r\nimport injectReducers from './injectReducers';\r\n\r\nconst initReducer = (state = {}, action) => {\r\n\treturn state;\r\n};\r\n\r\nconst initReducers = {\r\n\tinit: initReducer,\r\n};\r\n\r\nconst myStore = (initState = {}) => {\r\n\tconst saga = createSagaMiddleware();\r\n\tlet middleware = [saga];\r\n\tconst enhancers = [];\r\n\tlet composeEnhancers = undefined;\r\n\r\n    console.log(`process.env.NODE_ENV: ${process.env.NODE_ENV}`);\r\n\tif (process.env.NODE_ENV !== \"production\") {\r\n\t\t//remote debugging can be switched on/off by shaking the expo client.\r\n\t\t// if (Platform.OS === 'ios') NativeModules.DevSettings.setIsDebuggingRemotely(true);\r\n\t\tcomposeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;;\r\n\t\t// middleware.push(logger);\r\n\t} else {\r\n\t\tcomposeEnhancers = compose;\r\n\t}\r\n\r\n\t// composeEnhancers = compose;\r\n\tconst store = createStore(\r\n\t\tmakeRootReducer(initReducers),\r\n\t\tinitState,\r\n\t\tcomposeEnhancers(applyMiddleware(...middleware), ...enhancers)\r\n\t);\r\n\r\n\tstore.asyncReducers = {};\r\n\tstore.sagaMiddleware = saga;\r\n\tstore.injectedEffects = {};\r\n\r\n\tstore.attachSaga = saga => {\r\n\t\tstore.sagaMiddleware.run(saga);\r\n\t};\r\n\tinjectReducers(store);\r\n\treturn store;\r\n};\r\n\r\nexport default myStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport myStore from './store/createStore';\r\nconst store = myStore();\r\n\r\n//test\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}